{"version":3,"sources":["pages/PreJunior/FirstTask/FirstTask.module.css","pages/PreJunior/SecondTask/SecondTask.module.css","pages/PreJunior/ThirdTask/ThirdTask.module.css","App.module.css","pages/PreJunior/FirstTask/FirstTaskMessage.tsx","pages/PreJunior/FirstTask/FirstTask.tsx","common/UniCheckbox.tsx","common/DeleteButton.tsx","pages/PreJunior/SecondTask/SecondTaskMessage.tsx","pages/PreJunior/SecondTask/SecondTask.tsx","common/AddButton.tsx","common/Input.tsx","pages/PreJunior/ThirdTask/ThirdTaskMessage.tsx","pages/PreJunior/ThirdTask/ThirdTask.tsx","pages/PreJunior/PreJunior.tsx","common/EditableSpan.tsx","common/UniButton.tsx","pages/Junior/SixthTask.tsx","pages/Junior/Junior.tsx","pages/JuniorPlus/JuniorPlus.tsx","Navbar/SwipeableTemporaryDrawer.tsx","Navbar/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","FirstTaskMessage","props","className","classes","wrap","ava","src","state","img","alt","messageBox","authorName","name","message","time","FirstTask","UniCheckbox","FormControlLabel","control","Checkbox","color","inputProps","checked","isDone","onChange","e","changeStatus","id","currentTarget","label","case","level","DeleteButton","IconButton","onClick","Delete","SecondTaskMessage","cases","map","c","key","removeCases","SecondTask","useState","setCases","filter","setFilter","casesForMessage","filteredCases","changeCases","value","caseId","findCase","find","t","AddButton","item","trim","addItem","setError","setItem","ControlPoint","Input","TextField","variant","type","error","helperText","onKeyPress","charCode","autoFocus","onBlur","offEditMode","ThirdTaskMessage","setName","myName","namesArr","length","ThirdTask","setNameArr","followerName","follower","v1","newFollower","alert","PreJunior","EditableSpan","editMode","setEditMode","onDoubleClick","UniButton","Button","SixthTask","stateAsString","JSON","stringify","localStorage","saveState","x","y","defaultState","getItem","parse","restoreState","Junior","JuniorPlus","useStyles","makeStyles","list","width","fullList","button","margin","textDecoration","SwipeableTemporaryDrawer","React","top","left","bottom","right","setState","toggleDrawer","anchor","open","event","Fragment","SwipeableDrawer","onClose","onOpen","clsx","role","onKeyDown","List","ListItem","to","Navbar","nav","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a8590a45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"FirstTask_wrap__1HviR\",\"ava\":\"FirstTask_ava__1FQ06\",\"messageBox\":\"FirstTask_messageBox__3An4H\",\"authorName\":\"FirstTask_authorName__2dTu5\",\"message\":\"FirstTask_message__1J0so\",\"time\":\"FirstTask_time__3Vwbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SecondTask_wrap__2Q94b\",\"ava\":\"SecondTask_ava__mM9j_\",\"messageBox\":\"SecondTask_messageBox__1lxF0\",\"authorName\":\"SecondTask_authorName__2wGcc\",\"cases\":\"SecondTask_cases__IpGqI\",\"time\":\"SecondTask_time__32r6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ThirdTask_wrap__2GDUL\",\"ava\":\"ThirdTask_ava__2-SqG\",\"messageBox\":\"ThirdTask_messageBox__1DwHv\",\"authorName\":\"ThirdTask_authorName__wC6Ea\",\"message\":\"ThirdTask_message__petY-\",\"time\":\"ThirdTask_time__1PB6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper\":\"App_app-wrapper__VIhta\",\"nav\":\"App_nav__TYb6P\",\"app-wrapper-content\":\"App_app-wrapper-content__3iURC\"};","import React from 'react';\r\nimport classes from \"./FirstTask.module.css\";\r\nimport {StateType} from \"./FirstTask\";\r\n\r\ntype PropsType = {\r\n    state: StateType\r\n}\r\n\r\nconst FirstTaskMessage : React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <div className={classes.ava}>\r\n                <img src={props.state.img} alt={\"ava\"}></img>\r\n            </div>\r\n            <div className={classes.messageBox}>\r\n                <div className={classes.authorName}>{props.state.name}</div>\r\n                <div className={classes.message}>{props.state.message}</div>\r\n                <div className={classes.time}>{props.state.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FirstTaskMessage;","import React from 'react';\r\nimport FirstTaskMessage from \"./FirstTaskMessage\";\r\n\r\nexport type StateType = {\r\n    img: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst FirstTask = () => {\r\n    let state: StateType = {\r\n        img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSz3oe7au6Voj7bwkAdVqEhbemBlvOSDNsybGBb-1nN_q4gPhB3&usqp=CAU\",\r\n        name: \"Constantin\",\r\n        message: \"Hi!What's up?\",\r\n        time: \"15:23\"\r\n    }\r\n\r\n    return (\r\n        <FirstTaskMessage state={state}/>\r\n    );\r\n}\r\n\r\nexport default FirstTask;","import React, {ChangeEvent} from \"react\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\n\r\ntype CheckboxPropsType = {\r\n    changeStatus: (id: number, isDone: boolean) => void\r\n    isDone: boolean\r\n    id: number\r\n    case: string\r\n    level: string\r\n}\r\n\r\nexport const UniCheckbox = (props: CheckboxPropsType) => {\r\n    const onStatusChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.changeStatus(props.id, e.currentTarget.checked);\r\n    }\r\n\r\n    return <FormControlLabel\r\n        control={\r\n            <Checkbox\r\n                color={\"default\"}\r\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n                checked={props.isDone}\r\n                onChange={onStatusChangeHandler}\r\n            />\r\n        }\r\n        label={props.case + ' - ' + props.level}\r\n    />\r\n};","import React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport { Delete} from \"@material-ui/icons\";\r\n\r\ntype DeleteButtonPropsType = {\r\n    onClick: (id: number) => void\r\n    id: number\r\n}\r\n\r\nexport const DeleteButton = (props: DeleteButtonPropsType) => {\r\n    const deleteItem = () => {\r\n        props.onClick(props.id);\r\n    }\r\n\r\n    return (\r\n        <IconButton onClick={deleteItem}>\r\n            <Delete />\r\n        </IconButton>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './SecondTask.module.css';\r\nimport {CasesType, StateType} from './SecondTask';\r\nimport {UniCheckbox} from \"../../../common/UniCheckbox\";\r\nimport {DeleteButton} from \"../../../common/DeleteButton\";\r\n// import {UniButton} from \"../../../common/UniButton\";\r\n\r\ntype PropsType = {\r\n    state: StateType\r\n    cases: Array<CasesType>\r\n    removeCases: (id: number) => void\r\n    changeCases: (value: string) => void\r\n    changeStatus: (id: number, isDone:boolean) => void\r\n    filter: string\r\n}\r\n\r\nfunction SecondTaskMessage(props: PropsType)  {\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <div className={classes.ava}>\r\n                <img src={props.state.img} alt={\"ava\"}/>\r\n            </div>\r\n            <div className={classes.messageBox}>\r\n                <div className={classes.authorName}>{props.state.name}</div>\r\n                <div className={classes.cases}>\r\n                    {\r\n                        props.cases.map(c => {\r\n\r\n                            return <div key={c.id} className={c.isDone ? \"is-done\" : \"\"}>\r\n                                <UniCheckbox\r\n                                    changeStatus={props.changeStatus}\r\n                                    isDone={c.isDone}\r\n                                    id={c.id}\r\n                                    case={c.case}\r\n                                    level={c.level}\r\n                                />\r\n                                <DeleteButton onClick={props.removeCases} id={c.id}/>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div>\r\n\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"low\"}*/}\r\n                    {/*/>*/}\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"middle\"}*/}\r\n                    {/*/>*/}\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"high\"}*/}\r\n                    {/*/>*/}\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"highest\"}*/}\r\n                    {/*/>*/}\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"active\"}*/}\r\n                    {/*/>*/}\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"completed\"}*/}\r\n                    {/*/>*/}\r\n                    {/*<UniButton onClick={props.changeCases}*/}\r\n                    {/*           value={\"all\"}*/}\r\n                    {/*/>*/}\r\n                </div>\r\n                <div className={classes.time}>{props.state.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SecondTaskMessage;","import React, {useState} from \"react\";\r\nimport SecondTaskMessage from \"./SecondTaskMessage\";\r\n\r\nexport type CasesType = {\r\n    id: number\r\n    case: string\r\n    level: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type StateType = {\r\n    img: string\r\n    name: string\r\n    time: string\r\n}\r\n\r\n// export type FilterValuesType = \"all\" | \"low\" | \"middle\" | \"high\" | \"highest\";\r\n\r\nfunction SecondTask() {\r\n    \r\n    let state: StateType = {\r\n        img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSz3oe7au6Voj7bwkAdVqEhbemBlvOSDNsybGBb-1nN_q4gPhB3&usqp=CAU\",\r\n        name: \"Constantin\",\r\n        time: \"15:25\"\r\n    }\r\n\r\n    let [cases, setCases] = useState<Array<CasesType>>([\r\n        {id: 1, case:\"work\", level:\"middle\", isDone: false},\r\n        {id: 2, case:\"study\", level:\"highest\", isDone: true},\r\n        {id: 3, case:\"reading\", level:\"high\", isDone: false},\r\n        {id: 4, case:\"walks\", level:\"low\", isDone: true}\r\n    ])\r\n\r\n    let [filter, setFilter] = useState<string>(\"all\");\r\n\r\n    function removeCases(id: number) {\r\n        let filteredCases = cases.filter( c => c.id !==id)\r\n        setCases(filteredCases);\r\n    }\r\n\r\n    function changeCases(value: string) {\r\n        setFilter(value);\r\n    }\r\n\r\n    function changeStatus(caseId: number, isDone: boolean) {\r\n        let findCase = cases.find( t => t.id === caseId);\r\n        if (findCase) {\r\n            findCase.isDone = isDone;\r\n        }\r\n        setCases([...cases]);\r\n    }\r\n\r\n    let casesForMessage = cases;\r\n    if (filter === \"low\") {\r\n        casesForMessage = cases.filter(c => c.level === \"low\");\r\n    }\r\n    if (filter === \"middle\") {\r\n        casesForMessage = cases.filter(c => c.level === \"middle\");\r\n    }\r\n    if (filter === \"high\") {\r\n        casesForMessage = cases.filter(c => c.level === \"high\");\r\n    }\r\n    if (filter === \"highest\") {\r\n        casesForMessage = cases.filter(c => c.level === \"highest\");\r\n    }\r\n    if (filter === \"active\") {\r\n        casesForMessage = cases.filter(c => !c.isDone);\r\n    }\r\n    if (filter === \"completed\") {\r\n        casesForMessage = cases.filter(c => !c.isDone);\r\n    }\r\n\r\n    return (\r\n        <SecondTaskMessage\r\n            state={state}\r\n            cases={casesForMessage}\r\n            removeCases={removeCases}\r\n            changeCases={changeCases}\r\n            changeStatus={changeStatus}\r\n            filter={filter}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default SecondTask;","import React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {ControlPoint} from \"@material-ui/icons\";\r\n\r\ntype AddButtonPropsType = {\r\n    addItem: (item: string) => void\r\n    item: string\r\n    setItem: (value: string) => void\r\n    setError: (value: string) => void\r\n}\r\n\r\nexport const AddButton = (props: AddButtonPropsType) => {\r\n    const onAddItemClick = () => {\r\n        if(props.item.trim() !== \"\") {\r\n            props.addItem(props.item);\r\n        } else {\r\n            props.setError(\"Field is empty!\");\r\n        }\r\n        props.setItem(\"\");\r\n    }\r\n\r\n    return (\r\n        <IconButton\r\n                    onClick={onAddItemClick}\r\n                    color={'primary'}\r\n        >\r\n            <ControlPoint />\r\n        </IconButton>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype InputPropsType = {\r\n    item: string\r\n    addItem: (item: string) => void\r\n    setItem: (item: string) => void\r\n    error: string\r\n    setError: (value: string) => void\r\n    offEditMode?: () => void\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n\r\n    const onItemChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setError(\"\");\r\n        props.setItem(e.currentTarget.value);\r\n    }\r\n\r\n    const onKeyPressAddItem = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        props.setError(\"\");\r\n        if (e.charCode === 13) {\r\n            if(props.item.trim() !== \"\") {\r\n                props.addItem(props.item);\r\n            } else {\r\n                props.setError(\"Field is empty!\");\r\n            }\r\n            // props.setItem(\"\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <TextField\r\n            variant={'outlined'}\r\n            label={'New item'}\r\n            type={\"text\"}\r\n            value={props.item}\r\n            onChange={onItemChange}\r\n            error={!!props.error}\r\n            helperText={props.error}\r\n            onKeyPress={onKeyPressAddItem}\r\n            autoFocus={true}\r\n            onBlur={props?.offEditMode}\r\n        />\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport classes from \"./ThirdTask.module.css\";\r\nimport {NamesArrayType, StateType} from \"./ThirdTask\";\r\nimport {AddButton} from \"../../../common/AddButton\";\r\nimport {Input} from \"../../../common/Input\";\r\n\r\ntype PropsType = {\r\n    state: StateType\r\n    namesArr: Array<NamesArrayType>\r\n    addItem: (followerName: string) => void\r\n}\r\n\r\nconst ThirdTaskMessage : React.FC<PropsType> = (props) => {\r\n    let [name, setName] = useState(\"\");\r\n    let [error, setError] = useState<string>('');\r\n\r\n    const onClickHandler = () => {\r\n        if (name.trim() !== '') {\r\n            props.addItem(name)\r\n            setName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <div className={classes.ava}>\r\n                <img src={props.state.img} alt={\"ava\"}></img>\r\n            </div>\r\n            <div className={classes.messageBox}>\r\n                <div className={classes.authorName}>{props.state.myName}</div>\r\n                <div className={classes.message}>\r\n                    <Input\r\n                        addItem={props.addItem}\r\n                        item={name}\r\n                        setItem={setName}\r\n                        error={error}\r\n                        setError={setError}\r\n                    />\r\n                    <AddButton\r\n                        addItem={onClickHandler}\r\n                        item={name}\r\n                        setItem={setName}\r\n                        setError={setError}\r\n                    />\r\n                    <span> {props.state.namesArr.length} </span>\r\n                </div>\r\n                <div className={classes.time}>{props.state.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThirdTaskMessage;","import React, {useState} from 'react';\r\nimport ThirdTaskMessage from \"./ThirdTaskMessage\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type NamesArrayType = {id: string, followerName: string}\r\n\r\n\r\nexport type StateType = {\r\n    img: string\r\n    myName: string\r\n    namesArr: Array<NamesArrayType>\r\n    time: string\r\n}\r\n\r\nconst ThirdTask = () => {\r\n    let [namesArr, setNameArr] = useState<Array<NamesArrayType>>([]);\r\n\r\n    function addFollower(followerName: string) {\r\n        let follower = {id: v1(), followerName: followerName};\r\n        let newFollower = [follower,...state.namesArr];\r\n        setNameArr(newFollower);\r\n        alert(\"Hello, \" + follower.followerName);\r\n    }\r\n\r\n    let state: StateType = {\r\n        img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSz3oe7au6Voj7bwkAdVqEhbemBlvOSDNsybGBb-1nN_q4gPhB3&usqp=CAU\",\r\n        myName: \"Constantin\",\r\n        namesArr: namesArr,\r\n        time: \"15:27\"\r\n    }\r\n\r\n    return (\r\n        <ThirdTaskMessage\r\n            state={state}\r\n            namesArr={namesArr}\r\n            addItem={addFollower}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ThirdTask;","import React from 'react';\nimport FirstTask from \"./FirstTask/FirstTask\";\nimport SecondTask from \"./SecondTask/SecondTask\";\nimport ThirdTask from \"./ThirdTask/ThirdTask\";\n\n\nconst PreJunior = () => {\n    return (\n        <div>\n            <FirstTask />\n            <SecondTask />\n            <ThirdTask />\n        </div>\n    )\n}\n\nexport default PreJunior;\n","import React, {useState} from \"react\";\r\nimport {Input} from \"./Input\";\r\n\r\ntype EditableSpanType = {\r\n    item: string,\r\n    addItem: (item: string) => void\r\n    setItem: (value: string) => void\r\n    error: string\r\n    setError: (value: string) => void\r\n}\r\n\r\nfunction EditableSpan(props: EditableSpanType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.setItem(props.item);\r\n    }\r\n\r\n    return editMode\r\n        ? <Input\r\n            item={props.item}\r\n            addItem={props.addItem}\r\n            setItem={props.setItem}\r\n            offEditMode={offEditMode}\r\n            error={props.error}\r\n            setError={props.setError}\r\n        />\r\n        : <span onDoubleClick={onEditMode}>{props.item}</span>\r\n\r\n}\r\n\r\nexport default EditableSpan;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\ntype UniButtonPropsType = {\r\n    onClick: () => void\r\n    value: string\r\n}\r\n\r\nexport const UniButton = (props: UniButtonPropsType) => {\r\n\r\n    return (\r\n        <Button variant={\"outlined\"}\r\n                onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </Button>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport EditableSpan from \"../../common/EditableSpan\";\r\nimport {UniButton} from \"../../common/UniButton\";\r\n\r\nexport function saveState<T> (key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// type MessageType = {\r\n//     id: string\r\n//     x: string\r\n// }\r\n// type StoreType = Array<MessageType>;\r\n\r\n// let store: StoreType = [];\r\n\r\nconst SixthTask = () => {\r\n    let [item, setItem] = useState(\"This is EditableSpan.\");\r\n    let [error, setError] = useState<string>(\"\");\r\n\r\n    const addMessage = () => {\r\n        // store.push({id: v1(), x: item});\r\n\r\n        saveState<StateType>(\"test\", {x: item, y: 1});\r\n    }\r\n\r\n    const restoreMessage = () => {\r\n        // let lastItem = store[store.length - 1];\r\n        // setItem(lastItem.x);\r\n\r\n        const state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n        setItem(state.x);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <EditableSpan\r\n                    item={item}\r\n                    addItem={setItem}\r\n                    setItem={setItem}\r\n                    error={error}\r\n                    setError={setError}\r\n                />\r\n            </div>\r\n            <div>\r\n                <UniButton onClick={addMessage} value={'Save'}/>\r\n                <UniButton onClick={restoreMessage} value={'Set'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SixthTask;\r\n","import React from 'react';\nimport SixthTask from \"./SixthTask\";\n\nconst Junior = () => {\n\n    return (\n        <div>\n            {'Hello, here Junior page is!'}\n            <SixthTask />\n        </div>\n    )\n}\n\nexport default Junior;\n","import React from 'react';\n\nconst JuniorPlus = () => {\n    return (\n        <div>\n            {'Hello, JuniorPlus!'}\n        </div>\n    )\n}\n\nexport default JuniorPlus;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button, List, ListItem, SwipeableDrawer} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    button: {\r\n        margin: 10,\r\n    },\r\n    item: {\r\n        color: \"black\",\r\n        textDecoration: \"none\"\r\n    }\r\n});\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\n\r\nfunction SwipeableTemporaryDrawer() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent,\r\n    ) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                (event as React.KeyboardEvent).key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem key={'PreJunior'} >\r\n                    <NavLink to=\"/pre_junior\" className={classes.item}>\r\n                        Pre Junior\r\n                    </NavLink>\r\n                </ListItem>\r\n                <ListItem key={'Junior'} >\r\n                    <NavLink to=\"/junior\" className={classes.item}>\r\n                        Junior\r\n                    </NavLink>\r\n                </ListItem>\r\n                <ListItem key={'JuniorPlus'} >\r\n                    <NavLink to=\"/junior_plus\" className={classes.item}>\r\n                        Junior Plus\r\n                    </NavLink>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {(['left', 'right', 'top', 'bottom'] as Anchor[]).map((anchor) => (\r\n                <React.Fragment key={anchor}>\r\n                    <Button variant={\"contained\"}\r\n                            className={classes.button}\r\n                            onClick={toggleDrawer(anchor, true)}\r\n                    >\r\n                        {anchor}\r\n                    </Button>\r\n                    <SwipeableDrawer\r\n                        anchor={anchor}\r\n                        open={state[anchor]}\r\n                        onClose={toggleDrawer(anchor, false)}\r\n                        onOpen={toggleDrawer(anchor, true)}\r\n                        className={classes.item}\r\n                    >\r\n                        {list(anchor)}\r\n                    </SwipeableDrawer>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeableTemporaryDrawer;","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport SwipeableTemporaryDrawer from \"./SwipeableTemporaryDrawer\";\r\n\r\n\r\nfunction Navbar()  {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <SwipeableTemporaryDrawer />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.module.css';\nimport PreJunior from \"./pages/PreJunior/PreJunior\";\nimport Junior from \"./pages/Junior/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus/JuniorPlus\";\nimport Navbar from \"./Navbar/Navbar\";\nimport {HashRouter, Route} from \"react-router-dom\";\n\nconst App = () => {\n\n    return (\n        <HashRouter>\n            <div className={'app-wrapper'}>\n                <div className={'nav'}>\n                    <Navbar />\n                </div>\n                <div className={'app-wrapper-content'}>\n                    <Route path={'/pre_junior'} component={PreJunior} />\n                    <Route path={'/junior'} component={Junior} />\n                    <Route path={'/junior_plus'} component={JuniorPlus} />\n                </div>\n            </div>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}